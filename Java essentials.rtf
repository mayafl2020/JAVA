{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid101\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid501\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid601\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid901\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1301\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1401\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid15}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}}
\margl1440\margr1440\vieww11640\viewh7300\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Java was developed by James Gosling in Sun Microsystems.It is platform independent language.This language was initially named as OAK and later renamed as Java\
\
Java versions\
1.0-Oak, 1.1-Java, 1.2-Playground, 1.3-Kestrel, 1.4-Merlin, 5-Tiger,6-Mustang, 7-Dolphin, Java 8, Java 9 Dolphin\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs26 \cf0 Java is a computer language that is Objet-Oriented,Class-based,Concurrent,Low Dependencies.\
\
Where is Java used?\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 {\listtext	\uc0\u8226 	}3 billion devices use Java Runtime Environment\
{\listtext	\uc0\u8226 	}To develop Android Applications\
{\listtext	\uc0\u8226 	}To develop Hadoop Applications\
{\listtext	\uc0\u8226 	}To develop business process management tools (BPM)\
{\listtext	\uc0\u8226 	}To develop web servers\
{\listtext	\uc0\u8226 	}To develop application servers\
{\listtext	\uc0\u8226 	}Java has been used to develop below frameworks: HIBERNATE,SPRING,APACHE HADOOP, STRUTS\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Languages before Java\
\
Before Java emerged as a programming language, there were many other programming languages :\
The C programming Language, C++,Microsoft VisualBasic 6.0\
C++ doesn\'92t provide efficient means for garbage collection, no built in support for threads, it gets complex when u want to develop a graphics rich applications not platform independent, memory allocation and de-location has to be done by the developer\
\
Features of Java\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	
\f1 \uc0\u9642 
\f0 	}Simple - Java was designed to be easy for professional programmer to learn and use effectively\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Portable - Applications written using Java are portable in the sense that they can be executed on any kind of computer contains any CPU or any operating system\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Object-Oriented- Java is true object oriented language.Everything is considered to be an \'93object\'94 and all operations are performed using these objects \
{\listtext	
\f1 \uc0\u9642 
\f0 	}Secure-Java Programs run inside virtual machine sandbox to prevent any activity from untrusted sources.No use of explicit pointer.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Distributed-Java has a feature called Remote Method Invocation(RMI) using which a program can invoke method of another program across a network and get the output.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Dynamic-Java programs carry with them substantial amounts of run-time type information that is used to verify and resolve accesses to objects at run time\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Robust-Java checks the code during the compilation time and run time also.Java completely takes care os memory allocation and releasing, which makes the Java program more robust.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}High Performance-Java achieves high performance through the use of byte code which can be easily translated into native machine code.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Java Platform Independent\
Java Code(.Java)  ->  JavaC Compiler -> Byte Code(.class) -> JVM\
\
Bytecode and Java Virtual Machine (JVM)\
\
Java Bytecode is the form of instructions that the JVM executes\
\
Java Virtual Machine (JVM)\
\
Runs the bytecode. Makes Java platform independent.Handles memory management.\
\
Java Memory Management\
\
C++ has pointers.User can allocate memory to these pointers.If the pointer is accessed without allocating memory or invalid pointer is accessed then program crashes.These issues are removed from Java as Java does not have pointers.Complete memory management is handled by Kava itself.\
\
Heap and Garbage Collector\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	1.	}The memory area in JVM where objects are created is called Heap\
{\listtext	2.	}Heap is divided into two parts.Young space and old space\
{\listtext	3.	}The memory is freed during runtime by a special thread called Garbage Collector\
{\listtext	4.	}The Garbage Collector looks for objects which are no longer needed by the program and destroys them\
{\listtext	5.	}All the newly allocated objects are created in young space.Once the young space is full then garbage collector is called so that memory can be released\
{\listtext	6.	}If the object has lived for long in young space then it will be moved to old space.Once the old space is full, garbage collector is called to release the space in heap.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
How Java work?\
\
You writing a code you give it to your compiler, that compiles it, converted into a bytecode,given to JVM and JIT where it complies again converted to Object Code and run on your platform (platform independent)\
\
Java Source(.java)\'97> Java C Comiler \'97> Java Bytecode \'97>JVM(Java interpreter and JIT Compiler)\'97>Object Code\'97> \'93Java is easy\'94\
\
Compile Time Environment (\'93JavaSource(.java) +  Java Compiler + Java Bytecode(.class)\'94)\'97\'97>\
\
Java Bytecodes move locally or through network\
\
Run-time Environment (\'93Class Loader - Java Class Libraries, Bytecode Verifier)->Java Interpreter + Just in Time Compiler (JVM) \'97-> Runtime System \'97\'97> Operating System \'97\'97> Hardware\
\
What is bytecode?\
Bytecode is an intermediate code which gets generated when Java file is compiled using JavaC compiler.After compilation .class file is generated which contains the byte code.This code is platform independent.\
What is advantage of executing parallel threads/tasks at a time?\
When many tasks/threads run at the same time, performance of the system increases.\
\
\
Java installation \
\
Go to {\field{\*\fldinst{HYPERLINK "https://www.oracle.com/java/technologies/downloads/"}}{\fldrslt https://www.oracle.com/java/technologies/downloads/}}\
Download Java Platform(JDK) version 8 update 121 and install on your Windows system\
\
To set the permanent path of JDK in your system\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0\cf0 {\listtext	1.	}Begin by going to My Computer Properties\
{\listtext	2.	}Click on Advanced system setting\
{\listtext	3.	}Click on Environment Variables option\
{\listtext	4.	}Select Path variable to edit\
{\listtext	5.	}Enter the path to bin folder inside JDK installed on your system\
{\listtext	6.	}(Default path is C:/ProgramFiles/Java/jdk1.8.0_121/biin)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
How to set permanent JAVA_HOME  path in Mac\
https://youtu.be/_gdpclEE-kA\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b\fs36 \cf0 Java Data Types\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0\fs24 \cf0 Primitive Data Types \
Integer- short ,long, byte, int\
Float- double, float\
Character-char\
Boolean-boolean\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b\fs36 \cf0 Data Operations\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0\fs24 \cf0 Arithmetic Operators + -  * / %(modulus)\
Unary Operators ++ Increment operator \'97 Decrement operator\
Relational Operators < <= > >= != ==\
Logical Operators && And         || Or        ! Not\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b\fs36 \cf0 Required Software\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0\fs24 \cf0 JDK 1.8 64 bit or 32 bit according to your machine
\f2\b\fs36 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.oracle.com/java/technologies/downloads/#java8"}}{\fldrslt \cf0 https://www.oracle.com/java/technologies/downloads/#java8}}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0\fs24 \cf0 \
Eclipse J2EE version for 64 bit or 32 bit according to your machine\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.eclipse.org/downloads/"}}{\fldrslt 
\f2\b\fs36 \cf0 https://www.eclipse.org/downloads/}}
\f2\b\fs36 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0\fs26 \cf0 Open Eclipse,selct workspace\
Create a Project - New - Java Project- Select the version you want to work in - Create a Class -click public static void main\
Execute java Program - short cut ctrl + F11\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b \cf0 Main method\
\
public static void main (String []  args)\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls5\ilvl0\cf0 {\listtext	\uc0\u8226 	}public  means this function is accessible globally across all the programs\
{\listtext	\uc0\u8226 	}static means without creating the object of a class, you can access this method.\
{\listtext	\uc0\u8226 	}void is the return type.This means main does not return any value\
{\listtext	\uc0\u8226 	}main is the function which will be called by JVM and String[] arg is the command line arguments\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0\fs24 \cf0 \
Program to add two numbers\
\
class  FirstProgram\
\{\
  public static void main (String[] args)\
  \{\
Int a = 20, b = 30, c;\
c = a + b;\
System.out.println(\'93Result is : \'93 + c );\
   \}\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b\fs36 \cf0 Control Statements\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 Selection Statements
\f0\b0  - if.. else    Switch.. Case\

\f2\b Iteration Statements
\f0\b0  - while      do.. While    for\

\f2\b Jump Statements
\f0\b0  - break     continue
\f2\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \
Program on if condition \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 class testif\
\{\
public static void main( String[] args )\
\{\
 Int balance = 10000;\
 Boolean withdraw;\
\
 If (balance < 0)\
  withdraw = false;\
 else\
  withdraw = true;\
\
System.out.println (\'93Can I withdraw : \'93 + withdraw);\
 \}\
\}\
 \
while-Loop: Program\
\
class WhileLoopDemo\{\
 \
 Public static void main(String[] args)\{\
Int I = 1;\
while(I <=10)\{\
 System.out.println(I);\
I++;\
   \}\
  \}\
\}\
\
\
for-Loop:Program\
\
class ForLoopDemo\
\{\
Public static void main (String[] args)\
\{\
        for(int I = 1; I <= 10; I++)\
        System.out.println(i);\
 \}\
\}\
\
Assignment - if Condition\
If condition\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls6\ilvl0\cf0 {\listtext	
\f1 \uc0\u9642 
\f0 	}Write a program to check if the candidate is eligible for voting or not (Hint: Check age)\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Write a program to check if the number is positive or negative\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Extend the previous program to check whether the given number is positive, zero, negative\
{\listtext	
\f1 \uc0\u9642 
\f0 	}(Hint: use if-else conditions)\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Write a program to find largest of two numbers\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Write a program to check given number is even or odd\
{\listtext	
\f1 \uc0\u9642 
\f0 	}(Hint use % operator)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Assignment- for -loop. **** do-while - loop ******* while -loop\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls7\ilvl0\cf0 {\listtext	\uc0\u9642 	}Write a program to print 10 even numbers and 10 odd numbers\
{\listtext	\uc0\u9642 	}Write a program to find factorial of a number\
{\listtext	\uc0\u9642 	}Write a program to generate tables of 10\
{\listtext	\uc0\u9642 	}Write a program to add the digits of a number\
{\listtext	\uc0\u9642 	}Write a program to generate 10 Fibonacci numbers\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b\fs36 \cf0 Data handling and functions\
\

\fs28 Arrays
\f0\b0\fs24 \
An array is a data structure which holds the sequential elements of the same type\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls8\ilvl0\cf0 {\listtext	\uc0\u8226 	}Array always starts from index 0\
{\listtext	\uc0\u8226 	}Each index in the array holds a value\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Why do we use Arrays?\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls9\ilvl0\cf0 {\listtext	\uc0\u8226 	}Arrays are an important structure to hold date\
{\listtext	\uc0\u8226 	}Java allows us to hold many objects of the same type using arrays and it can be used with the help of a loop to access the elements by their index\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Declaring Arrays\
Array can be declared in multiple way\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls10\ilvl0\cf0 {\listtext	1.	}int [] a = new int [5]; index has to be given in squared brackets\
{\listtext	2.	}int a [] = new int [5];\
{\listtext	3.	}int [] a = \{1,2,3,4,5\};\
{\listtext	4.	}int []a = new int [] \{1,2,3,4,5\};\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls11\ilvl0\cf0 {\listtext	\uc0\u8226 	}Arrays can be declared for primitive and non-primitive data types\
{\listtext	\uc0\u8226 	}\
{\listtext	\uc0\u8226 	}Instead of declaring int a1,a2,a3\'85,a100 we can declare int a[100]\
{\listtext	\uc0\u8226 	}It is fast and efficient to access an element in an array using the corresponding index without actually traversing through the entire array\
{\listtext	\uc0\u8226 	}The size of the array is fixed once it is created\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 For Example:A character array of 10 characters can be declared as\
       char[] ch = new char [10];\
\
Single dimensional Array\
\
Initialization int x[] = new int[12]\
Value 1,2,3,4,5,6,7,8,9,10,11,12\
System.out.print(a[5]);  Output 6\
\
Multi dimensional Array\
\
Initialization int x [ ][ ] = new int [5][5];\
\
class arrant\
\{\
public static void main(String[] args)\
\{\
Int I;\
Int [] a = \{10,20,30,40,50\};\
for (i =0;i < 5; i ++)\
System.out.println(a[I]);\
\}\
\}\
This program declares an array \'91a\'92 and initializes it with numbers 10,20,30,40 and 50\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls12\ilvl0\cf0 {\listtext	\uc0\u8226 	}Multi dimensional arrays can be 2 dimensional as rows and columns similar to a matrix\
{\listtext	\uc0\u8226 	}It could be 3 dimensional with depth, height and breadth\
{\listtext	\uc0\u8226 	}Or it could be \'92n\'92 dimensional array as per requirement \
{\listtext	\uc0\u8226 	}Usually 2 dimensional arrays are used to perform matrix operations\
{\listtext	\uc0\u8226 	}Like single dimensional arrays, multi dimensional arrays can be of primitive and non primitive data type\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Multi-dimensional arrays can be declared as\
Int [] [] a = new int [2] [2];\
char [] [] a = new char [3][2];\
float [] [] a = new float [5][5];\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls13\ilvl0\cf0 {\listtext	1.	}How many bytes are allocated for array x? Int x [] [] = new int [5] [5];                                                     An int element takes 4 bytes and array x can store 25 int elements .Hence total number of bytes taken by x is 25*4 = 100\
{\listtext	3.	}Can we do multi dimensional array operations in single dimensional array?If yes, then why do we require multi dimensional array?\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 We can perform all the operations of multi dimensional array in single dimensional array ,but when the data has more than one dimension it will be easier to perform operations in multi dimensional array.\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b\fs36 \cf0 Function \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0\fs24 \cf0 A function/method has group of statements to be executed.A function has a task to perform\
A function is declared as \
Public static void Hello(int a, int b)\
\
Scope specifier- This option specifies the visibility of the function.It could be public,private,protected or default\
Modifier - This will change the meaning of the function.Some of the options could be final, static, native, synchronized\
Return type  This option specifies the data that will be returned by the function.It could be primitive data type or object\
Arguments This is optional but can be used.Using this one can pass values to the function for computation\
Function name it is the name given to the function.Using function name, functions can be invoked\
\
Different Types of functions\
We use functions to provide different kinds of functionality\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls14\ilvl0\cf0 {\listtext	\uc0\u9642 	}absolute(). To find the absolute value of a number\
{\listtext	\uc0\u9642 	}square() to find the square of a number\
{\listtext	\uc0\u9642 	}sqrt() to find the square root of a number\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
What happened when a Function is invoked?\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls15\ilvl0\cf0 {\listtext	1.	}When a function is called from the main method, main method() address is stored on top of the stack\
{\listtext	2.	}Control jumps to execute the function\
{\listtext	3.	}After executing the function, main method address is popped from the stack and main method execution resumes\
}