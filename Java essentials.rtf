{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid101\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Java was developed by James Gosling in Sun Microsystems.It is platform independent language.This language was initially named as OAK and later renamed as Java\
\
Java versions\
1.0-Oak, 1.1-Java, 1.2-Playground, 1.3-Kestrel, 1.4-Merlin, 5-Tiger,6-Mustang, 7-Dolphin, Java 8, Java 9 Dolphin\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs26 \cf0 Java is a computer language that is Objet-Oriented,Class-based,Concurrent,Low Dependencies.\
\
Where is Java used?\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 {\listtext	\uc0\u8226 	}3 billion devices use Java Runtime Environment\
{\listtext	\uc0\u8226 	}To develop Android Applications\
{\listtext	\uc0\u8226 	}To develop Hadoop Applications\
{\listtext	\uc0\u8226 	}To develop business process management tools (BPM)\
{\listtext	\uc0\u8226 	}To develop web servers\
{\listtext	\uc0\u8226 	}To develop application servers\
{\listtext	\uc0\u8226 	}Java has been used to develop below frameworks: HIBERNATE,SPRING,APACHE HADOOP, STRUTS\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Languages before Java\
\
Before Java emerged as a programming language, there were many other programming languages :\
The C programming Language, C++,Microsoft VisualBasic 6.0\
C++ doesn\'92t provide efficient means for garbage collection, no built in support for threads, it gets complex when u want to develop a graphics rich applications not platform independent, memory allocation and de-location has to be done by the developer\
\
Features of Java\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	
\f1 \uc0\u9642 
\f0 	}Simple - Java was designed to be easy for professional programmer to learn and use effectively\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Portable - Applications written using Java are portable in the sense that they can be executed on any kind of computer contains any CPU or any operating system\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Object-Oriented- Java is true object oriented language.Everything is considered to be an \'93object\'94 and all operations are performed using these objects \
{\listtext	
\f1 \uc0\u9642 
\f0 	}Secure-Java Programs run inside virtual machine sandbox to prevent any activity from untrusted sources.No use of explicit pointer.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Distributed-Java has a feature called Remote Method Invocation(RMI) using which a program can invoke method of another program across a network and get the output.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Dynamic-Java programs carry with them substantial amounts of run-time type information that is used to verify and resolve accesses to objects at run time\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Robust-Java checks the code during the compilation time and run time also.Java completely takes care os memory allocation and releasing, which makes the Java program more robust.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}High Performance-Java achieves high performance through the use of byte code which can be easily translated into native machine code.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Java Platform Independent\
Java Code(.Java)  ->  JavaC Compiler -> Byte Code(.class) -> JVM\
\
Bytecode and Java Virtual Machine (JVM)\
\
Java Bytecode is the form of instructions that the JVM executes\
\
Java Virtual Machine (JVM)\
\
Runs the bytecode. Makes Java platform independent.Handles memory management.\
\
Java Memory Management\
\
C++ has pointers.User can allocate memory to these pointers.If the pointer is accessed without allocating memory or invalid pointer is accessed then program crashes.These issues are removed from Java as Java does not have pointers.Complete memory management is handled by Kava itself.\
\
Heap and Garbage Collector\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	1.	}The memory area in JVM where objects are created is called Heap\
{\listtext	2.	}Heap is divided into two parts.Young space and old space\
{\listtext	3.	}The memory is freed during runtime by a special thread called Garbage Collector\
{\listtext	4.	}The Garbage Collector looks for objects which are no longer needed by the program and destroys them\
{\listtext	5.	}All the newly allocated objects are created in young space.Once the young space is full then garbage collector is called so that memory can be released\
{\listtext	6.	}If the object has lived for long in young space then it will be moved to old space.Once the old space is full, garbage collector is called to release the space in heap.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
How Java work?\
\
You writing a code you give it to your compiler, that compiles it, converted into a bytecode,given to JVM and JIT where it complies again converted to Object Code and run on your platform (platform independent)\
\
Java Source(.java)\'97> Java C Comiler \'97> Java Bytecode \'97>JVM(Java interpreter and JIT Compiler)\'97>Object Code\'97> \'93Java is easy\'94\
\
Compile Time Environment (\'93JavaSource(.java) +  Java Compiler + Java Bytecode(.class)\'94)\'97\'97>\
\
Java Bytecodes move locally or through network\
\
Run-time Environment (\'93Class Loader - Java Class Libraries, Bytecode Verifier)->Java Interpreter + Just in Time Compiler (JVM) \'97-> Runtime System \'97\'97> Operating System \'97\'97> Hardware\
\
What is bytecode?\
Bytecode is an intermediate code which gets generated when Java file is compiled using JavaC compiler.After compilation .class file is generated which contains the byte code.This code is platform independent.\
What is advantage of executing parallel threads/tasks at a time?\
When many tasks/threads run at the same time, performance of the system increases.\
\
\
Java installation \
\
Go to {\field{\*\fldinst{HYPERLINK "https://www.oracle.com/java/technologies/downloads/"}}{\fldrslt https://www.oracle.com/java/technologies/downloads/}}\
Download Java Platform(JDK) version 8 update 121 and install on your Windows system\
\
To set the permanent path of JDK in your system\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0\cf0 {\listtext	1.	}Begin by going to My Computer Properties\
{\listtext	2.	}Click on Advanced system setting\
{\listtext	3.	}Click on Environment Variables option\
{\listtext	4.	}Select Path variable to edit\
{\listtext	5.	}Enter the path to bin folder inside JDK installed on your system\
{\listtext	6.	}(Default path is C:/ProgramFiles/Java/jdk1.8.0_121/biin)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
How to set permanent JAVA_HOME  path in Mac\
https://youtu.be/_gdpclEE-kA\
\
}